name: Build and Deploy Documentation

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      # Checkout current repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Install dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake doxygen graphviz

      # Configure CMake
      - name: Configure CMake
        run: |
          cmake -B build -S . -DBUILD_WITH_DOCS=ON

      # Build documentation
      - name: Build Documentation
        run: |
          # Build the docs target
          cmake --build build --target docs || cmake --build build
          
          # Find where the HTML docs were generated
          echo "Looking for generated documentation..."
          find build -name "*.html" -type f | head -10
          
          # Common locations for CMake+Doxygen output:
          if [ -d "build/docs/html" ]; then
            echo "Found docs in build/docs/html"
            DOC_DIR="build/docs/html"
          elif [ -d "build/html" ]; then
            echo "Found docs in build/html"
            DOC_DIR="build/html"
          elif [ -d "docs/html" ]; then
            echo "Found docs in docs/html"
            DOC_DIR="docs/html"
          else
            echo "Searching for html directory..."
            DOC_DIR=$(find build -name "html" -type d | head -1)
            echo "Found docs in $DOC_DIR"
          fi
          
          # Add .nojekyll to prevent Jekyll processing
          touch "$DOC_DIR/.nojekyll"
          
          # Ensure index.html exists (Doxygen might use files.html as main)
          if [ ! -f "$DOC_DIR/index.html" ] && [ -f "$DOC_DIR/files.html" ]; then
            echo "Creating index.html redirect to files.html"
            echo '<!DOCTYPE html><html><head><meta http-equiv="refresh" content="0; url=files.html"></head></html>' > "$DOC_DIR/index.html"
          fi
          
          # List contents for debugging
          echo "Documentation contents:"
          ls -la "$DOC_DIR" | head -20
          
          # Store the path for the next step
          echo "DOC_PATH=$DOC_DIR" >> $GITHUB_ENV

      # Setup Pages
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Upload artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.DOC_PATH }}

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4